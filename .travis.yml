env:
  global:
    - ANDROID_API_LEVEL=27
    - EMULATOR_API_LEVEL=22
    - ANDROID_BUILD_TOOLS_VERSION=27.0.3
    - ANDROID_ABI="default;armeabi-v7a"

jobs:
  include:

    - stage: Unit Testing
      language: generic
      os: linux
      env: UNIT-TESTS
      before_script:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        - pub global activate coverage
      script: ./scripts/runTests.sh
      after_success: bash <(curl -s https://codecov.io/bash) -f lcov.info

    - &integration-test-staging
      stage: Integration Testing
      sudo: true
      dist: trusty
      language: generic
      os: linux
      env: bloc_flutter_android
      # Run integration tests on android
      before_install: &before_install_linux
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        # Install the Android SDK Dependency.
        - ANDROID_SDK_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
        - ANDROID_TOOLS_ROOT="/opt/android_sdk"
        - mkdir -p "${ANDROID_TOOLS_ROOT}"
        - mkdir -p ~/.android
        # Silence warning.
        - touch ~/.android/repositories.cfg
        - ANDROID_SDK_ARCHIVE="${ANDROID_TOOLS_ROOT}/archive"
        - wget --progress=dot:giga "${ANDROID_SDK_URL}" -O "${ANDROID_SDK_ARCHIVE}"
        - unzip -q -d "${ANDROID_TOOLS_ROOT}" "${ANDROID_SDK_ARCHIVE}"
        - rm "${ANDROID_SDK_ARCHIVE}"
        - PATH="${ANDROID_TOOLS_ROOT}/tools:${PATH}"
        - PATH="${ANDROID_TOOLS_ROOT}/tools/bin:${PATH}"
        - export ANDROID_HOME=$ANDROID_TOOLS_ROOT
        # Suppressing output of sdkmanager to keep log size down
        # (it prints install progress WAY too often).
        - yes "y" | sdkmanager "tools" > /dev/null
        - yes "y" | sdkmanager "platform-tools" > /dev/null
        - yes "y" | sdkmanager "extras;android;m2repository" > /dev/null
        - yes "y" | sdkmanager "extras;google;m2repository" > /dev/null
        - sdkmanager --install emulator > /dev/null
        - sdkmanager --list | head -15
        # install older packages
        - yes | sdkmanager "build-tools;25.0.2" "platforms;android-25" "extras;google;google_play_services" > /dev/null
        # Create and start emulator.
        - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI" > /dev/null
        - sdkmanager --list | head -15
        - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
        # install flutter
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        # Wait for emulator to startup.
        - PATH="${ANDROID_TOOLS_ROOT}/platform-tools:${PATH}" # add adb to path
        - ./scripts/android-wait-for-emulator.sh
        - adb shell input keyevent 82
        - flutter devices
      script: travis_retry ./scripts/ci.sh ./example/bloc_flutter
    - <<: *integration-test-staging
      os: osx
      env: bloc_flutter_ios
    # Run integration tests on ios
      before_install: &before_install_osx
        - echo before install osx 1
        - echo before install osx 2
#      script: travis_retry ./script/ci.sh ./example/bloc_flutter
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: built_redux_android
      script: travis_retry ./scripts/ci.sh ./example/built_redux
    - <<: *integration-test-staging
      os: osx
      env: built_redux_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: firestore_redux_android
      script: travis_retry ./scripts/ci.sh ./example/firestore_redux
    - <<: *integration-test-staging
      os: osx
      env: firestore_redux_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: inherited_widget_android
      script: travis_retry ./scripts/ci.sh ./example/inherited_widget
    - <<: *integration-test-staging
      os: osx
      env: inherited_widget_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: mvi_flutter_android
      script: travis_retry ./scripts/ci.sh ./example/mvi_flutter
    - <<: *integration-test-staging
      os: osx
      env: mvi_flutter_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: mvu_android
      script: travis_retry ./scripts/ci.sh ./example/mvu
    - <<: *integration-test-staging
      os: osx
      env: mvu_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: redurx_android
      script: travis_retry ./scripts/ci.sh ./example/redurx
    - <<: *integration-test-staging
      os: osx
      env: redurx_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: redux_android
      script: travis_retry ./scripts/ci.sh ./example/redux
    - <<: *integration-test-staging
      os: osx
      env: redux_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: scoped_model_android
      script: travis_retry ./scripts/ci.sh ./example/scoped_model
    - <<: *integration-test-staging
      os: osx
      env: scoped_model_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: simple_bloc_flutter_android
      script: travis_retry ./scripts/ci.sh ./example/simple_bloc_flutter
    - <<: *integration-test-staging
      os: osx
      env: simple_bloc_flutter_ios
      before_install: *before_install_osx
      script: echo Done
    - <<: *integration-test-staging
      os: linux
      env: vanilla_android
      script: travis_retry ./scripts/ci.sh ./example/vanilla
    - <<: *integration-test-staging
      os: osx
      env: vanilla_ios
      before_install: *before_install_osx
      script: echo Done

    - stage: Ready to deploy
      os: osx
      install: skip # bundle install is not required
      script: echo "Deploying to store ..."

  allow_failures:
    - env: mvu_android
    - env: mvu_ios
